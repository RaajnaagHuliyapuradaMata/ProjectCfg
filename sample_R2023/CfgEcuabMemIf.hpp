#pragma once
/******************************************************************************/
/* File   : NvM_BlocksNv_EcuabMemIf.hpp                                       */
/* Author : NAGARAJA HM (c) since 1982. All rights reserved.                  */
/******************************************************************************/

/******************************************************************************/
/* #INCLUDES                                                                  */
/******************************************************************************/
#include "CompilerCfg_EcuabMemIf.hpp"

/******************************************************************************/
/* #DEFINES                                                                   */
/******************************************************************************/
#define EcuabMemIf_DevErrorDetect                                 DevErrorDetect
#define EcuabMemIf_InitCheck                                              STD_ON

/******************************************************************************/
/* MACROS                                                                     */
/******************************************************************************/

/******************************************************************************/
/* TYPEDEFS                                                                   */
/******************************************************************************/
typedef enum{
      eStatus_UnInit = 0
   ,  eStatus_Idle
   ,  eStatus_Busy
   ,  eStatus_BusyInternal
}NvM_BlocksNv_EcuabMemIf_TypeStatus;

typedef enum{
      eResultJob_Ok = 0
   ,  eResultJob_Failed
   ,  eResultJob_Pemding
   ,  eResultJob_Camceled
   ,  eResultJob_BlockInconsistent
   ,  eResultJob_BlockInvalid
}NvM_BlocksNv_EcuabMemIf_TypeResultJob;

typedef enum{
      eMode_Slow = 0
   ,  eMode_Fast
}NvM_BlocksNv_EcuabMemIf_TypeMode;

/******************************************************************************/
/* CONSTS                                                                     */
/******************************************************************************/

/******************************************************************************/
/* PARAMS                                                                     */
/******************************************************************************/

/******************************************************************************/
/* OBJECTS                                                                    */
/******************************************************************************/

/******************************************************************************/
/* FUNCTIONS                                                                  */
/******************************************************************************/

/******************************************************************************/
/* EOF                                                                        */
/******************************************************************************/

